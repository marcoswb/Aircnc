{"version":3,"file":"createBabelLoader.js","sourceRoot":"","sources":["../../src/loaders/createBabelLoader.ts"],"names":[],"mappings":"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","sourcesContent":["import path from 'path';\nimport chalk from 'chalk';\nimport { Rule } from 'webpack';\nimport { getPossibleProjectRoot } from '../utils/paths';\nimport { Mode } from '../types';\n\nconst getModule = (name: string) => path.join('node_modules', name);\n\n// Only compile files from the react ecosystem.\nconst includeModulesThatContainPaths = [\n  getModule('react-native'),\n  getModule('react-navigation'),\n  getModule('expo'),\n  getModule('unimodules'),\n  getModule('@react'),\n  getModule('@expo'),\n  getModule('@unimodules'),\n  getModule('native-base'),\n];\n\nconst excludedRootPaths = [\n  'node_modules',\n  // Prevent transpiling webpack generated files.\n  '(webpack)',\n];\n\nconst parsedPackageNames: string[] = [];\n// TODO: Bacon: Support internal packages. ex: react/fbjs\nfunction packageNameFromPath(inputPath: string): string | null {\n  const modules = inputPath.split('node_modules/');\n  const libAndFile = modules.pop();\n  if (!libAndFile) return null;\n  if (libAndFile.charAt(0) === '@') {\n    const [org, lib] = libAndFile.split('/');\n    return org + '/' + lib;\n  } else {\n    const components = libAndFile.split('/');\n    const first = components.shift();\n    return first || null;\n  }\n}\n\nfunction logPackage(packageName: string) {\n  if (!parsedPackageNames.includes(packageName)) {\n    parsedPackageNames.push(packageName);\n    console.log(chalk.cyan('\\nCompiling module: ' + chalk.bold(packageName)));\n  }\n}\n\nfunction ensureRoot(possibleProjectRoot?: string): string {\n  if (typeof possibleProjectRoot === 'string') {\n    return path.resolve(possibleProjectRoot);\n  }\n  return getPossibleProjectRoot();\n}\n/**\n * A complex babel loader which uses the project's `babel.config.js`\n * to resolve all of the Unimodules which are shipped as ES modules (early 2019).\n */\nexport default function createBabelLoader({\n  /**\n   * The webpack mode: `\"production\" | \"development\"`\n   */\n  mode,\n  babelProjectRoot,\n  include = [],\n  verbose,\n  platform,\n  ...options\n}: {\n  mode?: Mode;\n  babelProjectRoot?: string;\n  include?: string[];\n  verbose?: boolean;\n  [key: string]: any;\n} = {}): Rule {\n  const ensuredProjectRoot = ensureRoot(babelProjectRoot);\n  const modules = [...includeModulesThatContainPaths, ...include];\n  const customUse = options.use || {};\n  const customUseOptions = customUse.options || {};\n\n  const isProduction = mode === 'production';\n  return {\n    test: /\\.[jt]sx?$/,\n    // Can only clobber test\n    // Prevent clobbering the `include` and `use` values.\n    ...options,\n\n    include(inputPath: string): boolean {\n      for (const possibleModule of modules) {\n        if (inputPath.includes(possibleModule)) {\n          if (verbose) {\n            const packageName = packageNameFromPath(inputPath);\n            if (packageName) logPackage(packageName);\n          }\n          return !!inputPath;\n        }\n      }\n      // Is inside the project and is not one of designated modules\n      if (inputPath.includes(ensuredProjectRoot)) {\n        for (const excluded of excludedRootPaths) {\n          if (inputPath.includes(excluded)) {\n            return false;\n          }\n        }\n        return true;\n      }\n      return false;\n    },\n    use: {\n      ...customUse,\n      loader: require.resolve('babel-loader'),\n      options: {\n        // TODO: Bacon: Caching seems to break babel\n        cacheDirectory: false,\n        // Explicitly use babel.config.js instead of .babelrc\n        babelrc: false,\n        // Attempt to use local babel.config.js file for compiling project.\n        configFile: true,\n\n        // Only clobber hard coded values.\n        ...(customUseOptions || {}),\n\n        caller: {\n          bundler: 'webpack',\n          platform,\n          mode,\n        },\n        sourceType: 'unambiguous',\n        root: ensuredProjectRoot,\n        // Cache babel files in production\n        cacheCompression: isProduction,\n        compact: isProduction,\n      },\n    },\n  };\n}\n"]}